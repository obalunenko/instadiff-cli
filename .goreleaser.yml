release:
  github:
    owner: obalunenko
    name: instadiff-cli
  footer: |
    **Full Changelog**: https://github.com/obalunenko/instadiff-cli/compare/{{ .PreviousTag }}...{{ .Tag }}

gomod:
  proxy: true
  # If proxy is true, use these environment variables when running `go mod` commands (namely, `go mod tidy`).
  # Defaults to `os.Environ()`.
  env:
    - GOPROXY=https://proxy.golang.org,direct
    - GOSUMDB=sum.golang.org
    - GOPRIVATE=example.com/blah
    - CGO_ENABLED=0
  # Which Go binary to use.
  # Defaults to `go`.
  gobinary: go

before:
  hooks:
    - go mod verify

builds:
  - id: cli
    binary: instadiff-cli
    goos:
      - "linux"
      - "darwin"
      - "windows"
    goarch:
      - "386"
      - "amd64"
      - "arm"
      - "arm64"
    mod_timestamp: '{{ .CommitTimestamp }}'
    env:
      - CGO_ENABLED=0
    main: ./cmd/instadiff-cli
    flags:
      - -trimpath
    ldflags:
      - "{{ .Env.GO_BUILD_LDFLAGS }}"
universal_binaries:
  -
    # ID of the source build
    #
    # Defaults to the project name.
    id: cli

    # Universal binary name template.
    #
    # You will want to change this if you have multiple builds!
    #
    # Defaults to '{{ .ProjectName }}'
    name_template: 'instadiff-cli'

    # Whether to remove the previous single-arch binaries from the artifact list.
    # If left as false, your end release might have both several macOS archives: amd64, arm64 and all.
    #
    # Defaults to false.
    replace: true

archives:
  - id: cli
    builds:
      - cli
    format: tar.gz
    wrap_in_directory: true
    rlcp: true
    format_overrides:
      - goos: windows
        format: zip
    name_template: "{{ .Binary }}-{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE
      - README.md
checksum:
  name_template: "{{ .ProjectName }}-{{ .Version }}-checksums.txt"

snapshot:
  name_template: SNAPSHOT-{{ .Commit }}

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^dev:"
      - "README"
      - "^readme"
      - "^scripts"
      - "scripts:"
      - Merge pull request
      - Merge branch
      - Rebase on master
      - "^Makefile"
      - "goreleaser"
  groups:
    - title: 'New Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 10
    - title: Other work
      order: 999

milestones:
  - close: true
